<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>