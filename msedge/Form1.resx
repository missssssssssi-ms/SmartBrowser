<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAoHAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABviSURBVHja7Z0JeJXllcdPolYqSquWsXZRdHCoY5V2Wn06xW2mttT6qDO1delotVTF
        dqAUbBUrimJAkH1fskD2PYRAdhKysJMNyL7c7EBM7v3ulnFaB955z3sTCghm+xLyfd//e57fcxNIcu99
        73f+7znnPe95iUbyWppP9GYk0cr9RKE2okJB9EbEGFpzeCJtLn+UtjXMovCWzRTenEWxHeUUfbKZQhvP
        UGSboOhTghIcAIx++F7lezas6Yy6h2NOlcuvs+S/bZaPsyiw8lFaXzLR773kMX57BPmFNxOtLZK2EE60
        vJDMdS0rIPlmiVYfJIpoJRLS6FfsHU9b6x+Whv6OHJRUOWA2iuv0ULz9NCXYzx/MRA03FDAoF9678t7m
        e5zv9Rh5z0edSJU28Y5fqO1hOQmOV7YRdYJoXZHPXniiNOzFxr5OGv7WeqJEpzT6fWPl1w9RWPNKqYpH
        5SB0f8bYAbAicV3dyibCpW2E2h6itYfHUpK0mY1HiZ6cSTRjg4EM/8Ns3yzPhh/XSRRSN1669q/IN5gl
        v3fD6AH4XDFwU0xHlgwVXqENpTcrW4poITomH4NqRrHhP/8eSZfHp1rJHqLgmvEyjp8ujf4IxXedxocL
        wADgUCHqRCWFt8ym2I/HU5KLbYoo5X+I/nvdKDP+LRVEizJJvlBOYlxLQVUvyxjniJztYfgADI3T0is4
        QqGNL9O64muld0C0eLfP5i77leDwJSrWHiHSpIsSWDlFJfXiuj7FBweArh7BpyppGFwzhT4VPk+bc2xP
        v3mZjD8gjWgPxyXVPPtfJxXqLYrtPIUPC4BhhG2MbW1J7jgKrvXZ4uvbRtj4X99KNDuIaLubaFvDBIo+
        GS5n/TP4gAAYCW9A2lpEawKtL51EiZqvfuDdxBEyfl7T53jfzdnJ1odk3F+EDwWAy1FwdLKcNpc/Lq3S
        j1YfIgpvGWbjD5Eux/pS3zLf5vKXKLajHR8EAJe16lCTIcE0CrdxrY0vNB+2hB9XKT33tj/FdPxWxiJO
        fAAAjIoEoSYn41dp2uKr6L0UonkJOht/YKXPvXgjkgt7/iRjEA8GHoDRVEDU+Ym00w/ppYVj6KNcophT
        Oib8+A/yFdMxTT4ZZn4ARuUKwcd/kxP1DJr2EdG6YqL3d+qw1MfZ/m7BhQcvSZWB8QMwqpHhQFjTNJUY
        fCeRaGHGEGL+LOF7VNl+JPwAMAQxpzQKqnpcVQ1ePYZoxvpBCADvT97WQBRcPQFLfQAYLRzoKKeQ2kkq
        dxdcMwjj5z3JK/dfQ1EnwjCgABiyTiCB1peMow1lA1gZ4F197yZRzzbEOaoGGYMJgDF3FEa0zKPbJ/vT
        W9FEswP7IQBcWhh9igt9pkg3ArX9ABh7ZcBOIXUPUmgj0ZrD/WjmwdsMVx28liLbUzGAAJiAqPZMWpR5
        vdq5y0n9S17s9nPDgeCalykeW3oBMEeRUNdpCmuaTlvrfOH9xS5/dhGYrQ3jKabjCAYOAFNVCpbQpmPf
        oMAqorlRF9vlV0YUbyc/buOFTj4AmG0LsaCt9fOVl//rBRdp3c1dfCNax8sfxOwPgCkLhDoqKNR2s6rv
        eXX5OQLAyQFuOhja+IqvNz8GCwATcpoi26ZTjrjAA+BmAiv3j6WYU1kYJADMvCJwopCW5Y+jVQd6j+vK
        87n/wbUP+fr2Y5AAMHEysJu2VE5VYYDqLMzbfTkxENq4Eod2AGCJuoBV9L/S5pfkSAFYc4RDgPHqaCIM
        DgBWqA48SkFV4yVSAMKa+KTeh9X5ZBgcAKywJPgJba2fSpFtUgDyVXffdzAwAFgFOx9f/j7t59WA+clj
        1IkjGBgArENkWy69mzSW+/xPVGeVY1AAsFAeoMPmt/n4RD7a61GK60SXXwCslQfw0Dbbo0ThzbNQ/QeA
        1QTAfkYKwFyiqPbNGBAALFkVGMIeAMp/AbAiYU17Se0QwmAAYMU8QDlRXGctBgMAKy4FtnfwmX+fUoKG
        wQDAegIg+MRfDIRlXD4AelA7A7sEhwAwDDMbu/x6TJJDXL9DE7ekauLODE18P9sp7s9xigdyneLf9vh4
        SH49ZbcmfpAt/z/LIb6b4RD3pNvF3T3cA0yIQ539B2MxkcFfmegQN+3UxL27neLZ/S7xRqlbrK7yiLB6
        r9je5BVpLd0iq7Vb5LR1i1zJnh7465xWr8hu8Yr0Zq/YYfOI2DqX2FrlFOuOOcRHJV0ioKhTLDji4wNg
        eBYUdUEAzGD4V8sZ/o50Tfxyn0sEHHOLmAavMvKC9m6x94SPwhO+75n8PihoP/9nWSAypSgkNrhFSKUm
        VpbZxcIiCIHhgQAYeLaXj1+VM/0ThS6xtMIjUuTs3mvwhf0w8oFyriDslp7CdikGgRWa8gw+gFcAAQAj
        Y/h+8nFimiamH3aJSOnW5/UYfcEwGH1fgsDPnd7sEeHVTrFCegUQAggAGEYmpGpiRpFbJDV6lUvP5Ldf
        Xno9A84dRNW6xIpSOwwLAgD0nPVv2KGJ5w+4RKzNezaWzx+F8OvKlEIQWuUUS4q74A1AAMBQ8E90iB/m
        OMWGao8ysMJRavgXigA/7mz0iA3HHSIAhgYBAAOf9a9LdohXDrlEWot3VLj6gxECXlbk/MBieAMQANB/
        4789TROLyz3nzahGhlcMOEkIEYAAgD6YIl3+iHpjzvqf5w1kNPtCAhgeBABcBF7em5rnFMlN5jL+c0WA
        6we2lGswPAgAOJcrEh3i53tlvN9sTuO/MC/A1YRIDkIAQM/M//Q+l8hsNUe83x+4tJj3GEAEIACW57EC
        p0hv8VrG+HvhzUdBFQgHIAAWhrfgcg1/ocWMP/+cPQWbypEYhABYcKnv25maiLOZO+bvT04gS3o/a45i
        iRACYCG+kqKJtVUeSxv/uSKQ0uhRuwohAhAA03NVkkPMKXZbLubvi5hal+oxAMOEAJja9f9ZgVNkWyjj
        P5CVASQFIQCmNv5vpmqmq/LTu1pweSnyARAAkxb7vF7ihvH3IQIcCqA+AAJgutn/e9maSG32wvXvA64U
        5Cak8AIgAKaB23IvOu5Wrbtg5H17Abx7cBESghAAs8z+vMMvsxWz/0ASghuPwwuAAJiAL8jZPwCz/4C9
        gCTpBWBZEAJg+Nl/chZi/8HtFfCKtagQhAAYnVlFmP0H6wVE17pgpBAA48JHdEVi3X9IdQFLew4eARAA
        w7n/P85zqoQWDHpw8MEjWyo0hAEQAGO29J5XBvd/qF5AQj0KgyAABmR8Ctx/hAEQAMu6/z/Y7dv0A0Me
        ek3ABtQEQACMJgAvHnRh9tfJCwirdkIAIADG4UoZ/y887kH8r2NRUACKgiAARuHLOxxiWx06/uglAHwE
        OR82CqOFABjC/f/HNE3saEL1n57NQ1fiaDEIgFEE4D4kAHVPBK7HFmEIgGHafuU7Ybg6E4SCIAiAUQTg
        V/uxAqB3HiC0CisBEACDCMBrh11YAdBZAKJqnDBYCIAxmFMMAdBbAGLrsDMQAmAQ3izBHgC9BSAOAgAB
        MApzSyEAEAAIgGX5cwlCAAgABMCy/LEYHsBwnBcAo4UAGGIV4OVD8AD0FoAIrAJAAIwiAE/vc4pCGK6u
        ArANdQAQAKMIwCNoBaY7aA0GATCMAHw3SxOZ2Aug614AHBcGATDOKcC7NJHYiN2Aeu8G5N6AQEcgAMPD
        tdsdYnMN+gHoFf8nN3rEnANdYsa+TjET6MaM/RCAYcFP8jY6AusCj+GCY25xbZJdXAN0BwIwTGHAL/c6
        EQLoAK+mPLffpcYU99YwgEEYHgG4O1MT6S3IAwzV/c9s6VZJVQgABMBQfCnZIYJqkQcY0uwvx25rnUdc
        vwP3EwTAgMwsQkXgUON/3lqNewkCYNDDQTT0BhzS8l+3uD8H7j8EwMBhwBYsBw7a/Q+uhfsPATC4F/DC
        ARcSgYPM/k87CPcfAmBwAZiQqokEG1YDBnwaUKNXna8A9x8CYPiioNnF6BI80OQfN1Xxx/0DATCDF/Ct
        dE0k46Sgfs/+O5u94tuZmP0hACbBH17AgJJ/fy5xiysScd9AAEzkBdyWqonYBi9EoI/EX7zNKyamOTD7
        QwDMx3P7nSIPjUI+lxcOOHGvQADMybhkh1hViV2Cl0r8ra3yiC8n4z6BAJg4FPhOlia2o1nIZxJ/fJz6
        97OR+IMAWICn9jpFTls3RKCHXDkWz+yD6w8BsAhXJ/lOD0LnYF/Wf16ZW4xJwn0BAbAQN6U4VMxr5VUB
        fu8bqz3i5p3I+kMALJgPuD1NUxterCgC/J7D6jxiUjrifgiAxTsHRTdYSwT4vcbZvOj0AwEAbAD3ZVun
        SIjfI2+O+mGOE8YPAQC98GzILrGZRYDfW2S9V9zLy334zCEA4HxPgOPhzdUeUxYK8XsKrPGIf86A2w8B
        AJcUgVt2OcTC426R126OOgF+D/xeFpe7xYRUZPshAKBPEeCThbgbTlqzsfMC/Nq5Nforh1yqDBrGDwEA
        A2gk8kCOJrbyMqHBvIGCnp19oXUe8VCuE409IABgsN4AF8nMKnKJVOkNGCE3wK+RPRfuf/B1FPhAAMDQ
        ReAK+fi9bE3F0dxmnI2sYBQafo58bUvla+RlTdXQA8YPAQD6CcEXkxziYelSr6jwiKxRIAQFPYbPorSq
        0iMe2eMUY7fD8CEAYFiF4BppZFNyNPHeUbfaRlvYPnJi0Gv0hT1beN8/5laHd8DwIQBghIXgSulm/1O6
        Jn59wKU2FnGe4KyB6iQIBT3Z/F6B4fh+nXyuFw845XM7xFVw9SEA4PIKAcMz8F0Zmnhmn0t8IGfl8HqP
        WoLL6xGEXi4lDOcaei/8u/w3+G8FyL/57D6neo6zsz0MHwIARp8YcALuhh0+QfhxniZ+c9Ap/lLqFqsr
        3WppLkW67rtbz4f/jf+Pf+YvZW75Oy4V098pPYwbd/i8DRg9BAAYQAD8evoP8sk69+c4xXP7XWJOsVss
        rXCr47a5JVmmnNmzeuCv+d/4/5bJn3m9xC1+JX/ngVynmCgFgP+WXwIEAAIARq3Rc5chNvjHC5xqBuc+
        A3zABrfbKhxECMBf8+/ukn8jRP4t7trzZKFLCYLq3gMxgACAy2v4/tItvzVVE0/LuH9ZhUdl5fOHMQnI
        33OowM/Fz8nP7Y8kIAQAjKzh82zPhUHcVzCh8e+Z/5FcBuTHRPncb8nXwNt7z3oF+IwgAGB4DP8L0sj+
        Vcb0Hx73ZfhHSyFQhnwtS8o9Kt8AIYAAgGHYGMSHZXLhT2bL6CsF7hUCrk7kJch75Gv1w+cGAQBDn/XH
        pzjE9MMuFd+Pxj0AFxMCTj7+7ohb/EMKmn9AAMCguS/bKTbXeJRhGW07MMMdgH6wGwd+QADAgGZ9jqN5
        7Z4z7kZvCMLewPMHXGr/ArwBCADow/hv2qmpNffcNvO0BNsj38v8Y27xtZ0ICSAA4JLGPyFVE2tMeloQ
        v6f11R5VrAQRgACAC4z/zgxNBNaavy14SJ1XHYYCEYAAgB7jnywNIrzeOgeDRDfgKHAIADh7FkBondeU
        ZwF87gEhUgTugicAAbCy8d+ySxObqq17OChvWLo9FSIAAbAgN6ZoYkUljgfnpKcqGMI9AQGwCtxGi/fn
        F7Rb1/jPioDkjVK32ueAewMCYAmeKHSqTroQAN8Y5LR1i5/vRcUgBMACcT9v6uEtvIUw/vO8gCQ5JpOz
        kA+AAJgYPvNvaYXHUhn/gRwssrLS4ztDEPcKBMCM/GKfS5XFwuAvTp4cm2flGOFegQCYzvX/xi5NRFqk
        2GcoqwIxDV7VagyhAATAVA09fn/EhaRfP0VgVpEbJwpDAMwz+9+RrqkkFwSgf6sCyU1e8a0MeAEQAJMw
        s8gF13+AXsDsYjfaikEAjD/7f1PG/rE2LPsN1AtIkGM2AbkACIDRBYA7+8D1H5wIvHDABQGAABiX67Y7
        xIZqD9z/QYYB3A/xS6gLgAAYdfbnPe+ZKPkdNFwurZqKwguAABgRXvrD7D+06sBZRSgMggAY0f2Xriu7
        sBCAofcMQBgAATCc+39XhibSmrH2P9REYEZLt/gONglBAIwmAD/fi+y/XiLwzD6sBgwb1yQ5BNCXsRLu
        7Y9df/rkAXgsURo8TMzc3yWAfszY3ylmH+gSiTYPPACd8gBbajwqpwKDHQYCirpEwJFOoCPLS7tEVosX
        BqxTCMD7KLBDcJj4QN6wQD8WSNYctaujvWDA+tUDfC8b9QAQAIMIwKZyh8iD4erXKETy03wIAATAIAIQ
        UqnBcHXOA/CeCggABMAQAhBW7UQCUOeVgNcOQwAgAAYhuhY1AHoLwJ9K3DBWCIAxiKmDAOgtAH8phQBA
        AAxCLARAdwF4pwwCAAGAAFi6GhAGCwFADsCiAvAmcgAQAKOsAkTUYBVAbwGYib4AEACjCMC2KgiA3nUA
        Lx7EMiAEwCACsKUChUB67wd4shCVgBAAgwjAumMOnAGoI3x8+JQcbAaCABhEAFaU2cXuVuwG1Gv2T232
        iknpDggABMAYLC7uEmlN6AegV/wfUe8VX0mBsUIADEJAUadIanBDAHRaAVhW4RZfSIKxQgCwIciSAjAd
        G4EgAEYTgPXHkQjUKwH4YC5WACAABuOjki6R0Yw8wJDifwkfrPq1nTBUCIDR8gCS+HqUBA/V/f/gmFtc
        mQhDhQAYtCAIrcGG1grsiQK4/xAAgwrAUhkGZLbgdKDBrv/HS/f/m7uw/g8BMHJzEOwMHLT7P7fEhQNB
        IADG9gLWHrWLHFQFDnj2Z8/pvmyU/0IADM5CFAUNuvjniyj+gQCYwQvYiJqAAbG7tVv8aA+SfxAAk7BI
        egHb4QX0e/ZfWekWY7fDOCEAZqoMPOYQuW3IBfQn9r8fW38hAGbcIIRmoX3v/Hu7zCWuQuEPBMCMXsDy
        UrvIaEZdwKWMP87mFRPTsO4PATAxQRUaEoIXgU9T/sVeJwwSAmD+ZUEOBWD052/6ebvMLcZg2Q8CYIVQ
        gHcK7mzETsFe1z+wxiNu3gnXHwJgIRFYc9Qusiy+T4CNP7nJK+5FxR8EwIpsLndYtkyYhS9dCuBj+Yj7
        IQAWJrhSUwkwqxl/thS+Z/c5hR+MEAJg9cYhoVVOy6wMFPRk/H970IVGHxAA0FsktLVKM32lIBt/Vmu3
        eOmAE11+IQDgQk+AawQ4J1Bg0oQfH/Dx1F5NXJFoh+FBAMDF2FTuMF0XITb+BJtX/GSPhpgfAgD6YlWZ
        XeywuU3h8jNrKt3i2xlY54cAgH7XCfDxYpE1TpUwKzDorJ8lw5lZRS5x4w4YPwQADCovsFGGBLuaPIab
        9UNqPeIR6fJjZx8EAOhQOhxe7RTZozg3UNDTzCO50SteO+QUX03BrA8BALqyssyuugzvHkUrBb2Gv7PJ
        q7r43pnuQKIPAgCGyxsI6EkSRkkh4NWCXiO8HEafr3r3e8QcGedzku+KRMz6EAAwIkLAj8tKu0RIpSZS
        Gt1n6wcKhtnoObmX1uxVmf1n9jrFLbt4xrfD8CEA4HIIwYKepqOrj9rFtiqnSLa51S7DvLa/J+QGIgwF
        Pfvz2dB7DZ5P6E2Usf3yCrd48YBT3C1n+2uSemZ7GD4EAIwCITjsgxuOsGew4bhD7THgA0q59wCfVMy5
        Ay43zmv77Bl8vNyY2dotdsnZPabBIzZVu8X8Mpcy+AdyNDXTXw2jNx/37Dol7kntBCbj7p7HyWmd4l/S
        O8W9GV3ih1l28eBuu/j3HId4JFeypxdNGfl3Mx2qJ99NKQ4xdrvddyxXPIze1FDUCd8X8QDA0C1FXKcU
        gPDmM5SgYTAAsBpR7VIAok81YzAAsKQAdJB0A8oxGABYkPiucqLItiwMBgAWJLxlL1FEaxAloEEDAJYj
        +mQIUXDNXIq3n8GAAGAl91/afFjzW0QhtY9SXJcHgwKApZYAP6GgqqeINh2bSLEdNgwKABYi5lQbrSu+
        i2hZ/hj5TSoGBQBLLQHm0Qdp1xFlCE4EvidjAgwKAJZA2vo22zLSpO1TWDNRYNVUFRNgcACwQgLwEwpt
        /CnFdBDnAJjxFNtxFIMDgCWW/6pp49GbJcQ5AKJu3hTUvgqDA4AFCGsKoi9e608zN0oB2FJBMh4gClJh
        QDcGCABTu//dFNEyVU74RAszyHet2Eu0JGccRbYXYpAAMPXyX6EM+cdRYBWdf+WqrcHTpUKcxkABYNLq
        v8i236mVv/Ou/3qXKLCSuZmiT1ZgsAAw5exfSxvKbqWNZUQz1l8gAv/xByIhOBcwn+K7MFgAmGv25+Tf
        fGqWNv52LH32mrGBaOV+XhW4DV4AAKZb+quTs//ttLmcaPFuuvQVbycKbZxOcZ3IBQBgjtn/tLTpmXRC
        zv4/e/VzjJ8LA5YX8vLA9RTVnonBA8AUs/9uWld8Pa0tIt/a/+ddK/YRbW0gCql7kGI77BhAAAxM7Mca
        bamYKuN/kiEA9X3NDiSaG0X09Un+FNEyD8uCABg48Rdq+5B+8ht/WpxNtCSX+nfNS5BqUUq0vmScdB8S
        MJgAGJCI1jRaVnCDmvn7bfy9V1AVFwYRBddOkqEAOgcDYLys/2Ta1kCfLfzpzzU7iGjcjUTxXZwPeJxi
        TmkYWAAMEfc75QT+DKV+SvSjXxO9l0KDu3izgO+X/SisaRol2CECAIxmeENfZPvLyn7XHCFafYiGdgWk
        +bKHry7nMwRmSHX5GwYagFFp/P9HWyoW0X/+8UoZ+/cz69+fK7bDtzz4+7VjZDiwRD4RRACA0Wb8Ea1L
        KCB9DK05TPRRHul7Ldjl8wbmBI9RnkA8wgEARo3bzzP/wowxtFa6/VzwMywX5wR4v0CojSi8ZZr0DCAC
        AFxe43dS9MmX6Rd/ulIZ//oSGt4rtFE+SakvMbi1/nGK/RhLhABcnu29dRRU/YyyS475dXf7L3UtziFa
        lMlHi/PRYpMo+kQCKgYBGKkKvy5BEW1ptPn4ZLXUxy6/b1IewWu5VJx7HuBQgDcRjZOP86Q3gL0DAAyv
        y6+p8t6l+Tcob/yJPwxjzN/XxV1Fgmt9uwhvu9tfhgQPyngkk+K64A0AoO+sf1rt6uMzPF4K8Fft/NNP
        Ey3MpMt/vZNI9HY8SQGQccie6ymsabpqKoLThgAY+oYeLusNtc1UW3ojWnyJ+CEX+Oh9BaQTrTnke2EJ
        DqJVB26TgjCfok/U4vhxAAZs+Gco+lStauO1vvh2ahckBYAGt7FnJC912oi8eEnCLV/06oO3qk6k0ScL
        ce4AAH26+t2qdXfUid/R+pJb6ZTw2dRjr3ENDhnn4i3Fv1/j8wjSz7BHMI5C6qZSaGMQRbbXSzH4qzqk
        EB86QGLvrxQlbYJP7AltnCpn+XHKZnhLPm/K4yI8w1697YfZfeGsJZG/dGFuoeCax2ibbakUg1w5AI3q
        cFKECsAKrj3f63zPR8l7P7RxqZwYH6Olebco2+AYf0u5z2Z4/42prvd3+nqSfbTHt3z4N8HqNlYOwB0U
        WPkUhTfPleFCOG1rKJauUIV0gzqkOwRRAAYt1Ok4o+7heHsFhdqK1b0d1jRX3eshtXfQoqyx9FdpA2z0
        XMjDtjHCs/3/A+nQ2/0R4VkgAAAAAElFTkSuQmCC
</value>
  </data>
</root>